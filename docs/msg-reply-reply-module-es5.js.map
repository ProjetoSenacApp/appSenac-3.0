{"version":3,"sources":["webpack:///src/app/msg/reply/reply.page.html","webpack:///src/app/msg/reply/reply-routing.module.ts","webpack:///src/app/components/message/message.component.ts","webpack:///src/app/components/message/message.component.scss","webpack:///src/app/msg/reply/reply.module.ts","webpack:///src/app/msg/reply/reply.page.ts","webpack:///src/app/services/app.service.ts","webpack:///src/app/components/message/message.component.html","webpack:///src/app/msg/reply/reply.page.scss"],"names":["routes","path","component","ReplyPageRoutingModule","imports","forChild","exports","MessageComponent","formBuilder","storage","router","fbStore","app","events","route","btnText","params","subscribe","atributes","msgParams","get","type","uData","navigate","userData","JSON","parse","pData","userProfile","collection","uid","msgBox","doc","msgId","valueChanges","msgData","msgToReply","from","wData","msgWhon","messageFormCreate","messageForm","group","userTo","name","subject","compose","required","minLength","message","console","log","value","selector","template","ReplyPageModule","declarations","ReplyPage","AppService","alertController","title","text","create","header","buttons","handler","alert","present","Promise","resolve","reject","next","data","error","userId","cssClass","role","update","status","then","providedIn"],"mappings":"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","file":"msg-reply-reply-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n\\r\\n    <!-- 15.1) Menu e título -->\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n    <ion-title>Responder</ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <div class=\\\"ion-padding\\\">\\r\\n\\r\\n    <!-- 15.2) Inclui seletor do componente do formulário de resposta -->\\r\\n    <app-message></app-message>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<!-- 17.1) Menu de mensagens -->\\r\\n<app-msg-menu></app-msg-menu>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ReplyPage } from './reply.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ReplyPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ReplyPageRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n// 15.1) Importa dependências\r\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\r\nimport { StorageMap } from '@ngx-pwa/local-storage';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { AppService } from '../../services/app.service';\r\nimport { EventsService } from 'src/app/services/events.service';\r\n\r\n@Component({\r\n  selector: 'app-message',\r\n  templateUrl: './message.component.html',\r\n  styleUrls: ['./message.component.scss'],\r\n})\r\nexport class MessageComponent implements OnInit {\r\n\r\n  // 15.3) Cria atributos\r\n  messageForm: FormGroup; // ReactiveForm\r\n  userData: any; // Dados do usuário logado\r\n  userProfile: any; // Perfil do usuário logado\r\n  msgToReply: any; // Mensagem original\r\n  msgParams: any; // Parâmetros da rota ('box' e 'msgId')\r\n  msgWhon: any; // Dados do correspondente ('from' ou 'to')\r\n  btnText = 'Enviar resposta'; // Texto do botão de envio\r\n\r\n  constructor(\r\n\r\n    // 15.2) Injeta dependências\r\n    private formBuilder: FormBuilder,\r\n    public storage: StorageMap,\r\n    public router: Router,\r\n    public fbStore: AngularFirestore,\r\n    public app: AppService,\r\n    public events: EventsService,\r\n    private route: ActivatedRoute,\r\n  ) {\r\n\r\n    // 15.4) Obtém nome da caixa (inbox / outbox) e Id da mensagem (-> msgParams)\r\n    this.route.params.subscribe(atributes => { this.msgParams = atributes; });\r\n\r\n    // 15.5) Obtém dados do usuário logado (-> userData e userProfile)\r\n    this.storage.get('userData', { type: 'string' }).subscribe((uData) => {\r\n      if (!uData) { this.router.navigate(['/user/login']); }\r\n      this.userData = JSON.parse(uData);\r\n      this.storage.get('userProfile', { type: 'string' }).subscribe((pData) => {\r\n        if (!pData) { this.router.navigate(['/user/new']); }\r\n        this.userProfile = JSON.parse(pData);\r\n      });\r\n\r\n      // 15.6) Obtém mensagem a ser respondida (-> msgToReply)\r\n      this.fbStore.collection(`messages/${this.userData.uid}/${this.msgParams.msgBox}`)\r\n        .doc(this.msgParams.msgId).valueChanges().subscribe(\r\n          (msgData) => {\r\n            this.msgToReply = msgData;\r\n\r\n            // 15.7) Obtém dados do correspondente (-> msgWhon)\r\n            this.fbStore.collection('users').doc(this.msgToReply.from).valueChanges().subscribe(\r\n              (wData) => {\r\n                this.msgWhon = wData;\r\n\r\n                // 15.8) Cria formulário (-> messageForm)\r\n                this.messageFormCreate();\r\n              }\r\n            );\r\n          });\r\n    });\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  // 15.9) Cria formulário da memsagem usando ReactiveForms\r\n  async messageFormCreate() {\r\n    this.messageForm = this.formBuilder.group({\r\n\r\n      userTo: [\r\n        this.msgWhon.name\r\n      ],\r\n\r\n      subject: [\r\n        `Re: ${this.msgToReply.subject}`,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(3)\r\n        ])\r\n      ],\r\n\r\n      message: [\r\n        `\\n\\nMensagem original: \\n--------------------\\n${this.msgToReply.message}\\n--------------------\\n`,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(5)\r\n        ])\r\n      ]\r\n\r\n    });\r\n  }\r\n\r\n  // 15.10) Processa envio da mensagem\r\n  messageSubmit() {\r\n    console.log(this.messageForm.value);\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWVzc2FnZS9tZXNzYWdlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { ReplyPageRoutingModule } from './reply-routing.module';\r\nimport { ReplyPage } from './reply.page';\r\n\r\n// 15.1) Importa dependências\r\nimport { MessageComponent } from '../../components/message/message.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n// 17.1) Importa dependências\r\nimport { MsgMenuComponent } from '../../components/msg-menu/msg-menu.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReplyPageRoutingModule,\r\n\r\n    // 15.2) Injeta dependências\r\n    ReactiveFormsModule,\r\n  ],\r\n  declarations: [\r\n    ReplyPage,\r\n\r\n    // 15.3) Declara componente importado\r\n    MessageComponent,\r\n\r\n    // 17.2) Declara dependências\r\n    MsgMenuComponent,\r\n  ]\r\n})\r\nexport class ReplyPageModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-reply',\r\n  templateUrl: './reply.page.html',\r\n  styleUrls: ['./reply.page.scss'],\r\n})\r\nexport class ReplyPage implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n}\r\n","/**\r\n * Serviços de uso geral\r\n *    Aqui estão alguns serviços usados em toda ou parte do aplicativo\r\n * @author Por Luferat\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n// 3.1) Importa dependências\r\nimport { Router } from '@angular/router'; // Roteamento\r\nimport { AlertController } from '@ionic/angular'; // Caixa de alerta\r\n\r\n// 4.1) Importa dependências\r\nimport { StorageMap } from '@ngx-pwa/local-storage'; // Armazenamento local\r\n\r\n// 13.1) Importa dependências\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppService {\r\n\r\n  constructor(\r\n\r\n    // 3.2) Injeção das dependências\r\n    public router: Router, // Roteamento\r\n    public alertController: AlertController, // Caixa de alerta\r\n\r\n    // 4.2) Injeção das dependências\r\n    private storage: StorageMap, // Armazenamento local\r\n\r\n    // 13.2) Injeção das dependências\r\n    public fbStore: AngularFirestore,\r\n  ) { }\r\n\r\n  // 3.3) Caixa de alerta para feedback (https://ionicframework.com/docs/api/alert)\r\n  async myAlert(title: string, text: string) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: text,\r\n      buttons: [{\r\n        text: 'Ok',\r\n        handler: () => true\r\n      }]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  // 4.3) Método que detecta a presença do perfil local\r\n  async isProfile() {\r\n\r\n    // Constrói a promise\r\n    return new Promise<any>((resolve, reject) => {\r\n\r\n      // Lê o armazenamento local\r\n      this.storage.get('userProfile', { type: 'string' }).subscribe({\r\n        next: (data) => {\r\n\r\n          // Se perfil, retorna 'true'\r\n          if (data) { resolve(true); }\r\n\r\n          // Se não tem perfil, retorna 'false'\r\n          else { resolve(false); }\r\n        },\r\n\r\n        // Em caso de erro ao tentar acessar 'storage'\r\n        error: (error) => console.error(error)\r\n      });\r\n    });\r\n  }\r\n\r\n  // 13.3) Apaga uma mensagem da caixa de mensagens\r\n  async msgDelete(userId: string, msgBox: string, msgId: string) {\r\n\r\n    // 14.1) Exibe a caixa de alerta e de confirmação\r\n    const alert = await this.alertController.create({\r\n      cssClass: '',\r\n      header: 'Apagar mensagem',\r\n      message: 'Tem certeza que deseja apagar esta mensagem? Este processo é irreversível!',\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => false\r\n        }, {\r\n          text: 'Apagar',\r\n          handler: () => {\r\n\r\n            // Localize a caixa correta e apaga a mensagem\r\n            this.fbStore.collection(`messages/${userId}/${msgBox}`).doc(msgId).update({ status: 'Apagada' })\r\n\r\n              // Se a mensagem foi apagada, retorna para a listagem da caixa\r\n              .then(() => { this.router.navigate([`/msg/${msgBox}`]); })\r\n\r\n              // Se deu erro, exibe\r\n              .catch(error => { console.log(error); });\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n}\r\n","export default \"<div *ngIf=\\\"messageForm\\\">\\r\\n\\r\\n  <p class=\\\"ion-text-center\\\">\\r\\n    <small>\\r\\n      <ion-text color=\\\"danger\\\">Preencha todos os campos.</ion-text>\\r\\n    </small>\\r\\n  </p>\\r\\n\\r\\n  <form [formGroup]=\\\"messageForm\\\" (ngSubmit)=\\\"messageSubmit()\\\">\\r\\n\\r\\n    <ion-list lines=\\\"full\\\" id=\\\"profileList\\\" class=\\\"ion-no-padding\\\">\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"userTo\\\" position=\\\"floating\\\" color=\\\"primary\\\">Para:</ion-label>\\r\\n        <ion-input type=\\\"text\\\" id=\\\"userTo\\\" name=\\\"userTo\\\" formControlName=\\\"userTo\\\" readonly=\\\"true\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"subject\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          Assunto:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"messageForm.controls.subject.errors\\\">\\r\\n            <small *ngIf=\\\"messageForm.controls.subject.errors.required\\\">* Obrigatório</small>\\r\\n            <small *ngIf=\\\"messageForm.controls.subject.errors.minlength\\\">* Inválido</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-input type=\\\"text\\\" id=\\\"subject\\\" name=\\\"subject\\\" formControlName=\\\"subject\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"message\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          Mensagem:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"messageForm.controls.message.errors\\\">\\r\\n            <small *ngIf=\\\"messageForm.controls.message.errors.required\\\">* Obrigatório</small>\\r\\n            <small *ngIf=\\\"messageForm.controls.message.errors.minlength\\\">* Inválido</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-textarea rows=\\\"10\\\" type=\\\"text\\\" id=\\\"message\\\" name=\\\"message\\\" formControlName=\\\"message\\\"></ion-textarea>\\r\\n      </ion-item>\\r\\n\\r\\n    </ion-list>\\r\\n\\r\\n    <ion-button type=\\\"submit\\\" expand=\\\"block\\\" class=\\\"ion-margin-vertical\\\" [disabled]=\\\"messageForm.invalid\\\">{{ btnText }}\\r\\n    </ion-button>\\r\\n\\r\\n  </form>\\r\\n\\r\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21zZy9yZXBseS9yZXBseS5wYWdlLnNjc3MifQ== */\";"]}