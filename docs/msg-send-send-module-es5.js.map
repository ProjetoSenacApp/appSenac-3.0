{"version":3,"sources":["webpack:///src/app/msg/send/send.page.html","webpack:///src/app/msg/send/send.page.scss","webpack:///src/app/services/app.service.ts","webpack:///src/app/msg/send/send.page.ts","webpack:///src/app/msg/send/send-routing.module.ts","webpack:///src/app/msg/send/send.module.ts"],"names":["AppService","router","alertController","storage","fbStore","title","text","create","header","message","buttons","handler","alert","present","Promise","resolve","reject","get","type","subscribe","next","data","error","console","userId","msgBox","msgId","cssClass","role","collection","doc","update","status","then","navigate","log","providedIn","SendPage","app","formBuilder","events","pipe","isProfile","uData","userData","JSON","parse","pData","userProfile","ref","where","orderBy","valueChanges","idField","usData","usersList","sendFormCreate","sendForm","group","userTo","compose","required","subject","minLength","msgSend","from","uid","trim","to","value","date","transform","Date","now","add","docRef","id","set","presentAlertConfirm","selector","template","routes","path","component","SendPageRoutingModule","imports","forChild","exports","SendPageModule","declarations"],"mappings":"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","file":"msg-send-send-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n\\r\\n    <!-- 10.1) Menu e título -->\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n    <ion-title>Nova mensagem</ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <div class=\\\"ion-padding\\\">\\r\\n\\r\\n    <!-- 17.2) Formulário de envio de mensagem -->\\r\\n    <div *ngIf=\\\"sendForm\\\">\\r\\n\\r\\n      <p class=\\\"ion-text-center\\\">\\r\\n        <small>\\r\\n          <ion-text color=\\\"danger\\\">Preencha todos os campos.</ion-text>\\r\\n        </small>\\r\\n      </p>\\r\\n\\r\\n      <form [formGroup]=\\\"sendForm\\\" (ngSubmit)=\\\"sendSubmit()\\\">\\r\\n\\r\\n        <ion-list lines=\\\"full\\\" id=\\\"profileList\\\" class=\\\"ion-no-padding\\\">\\r\\n\\r\\n          <ion-item>\\r\\n            <ion-label for=\\\"userTo\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n              Para:\\r\\n              <ion-text color=\\\"danger\\\" *ngIf=\\\"sendForm.controls.userTo.errors\\\">\\r\\n                <small *ngIf=\\\"sendForm.controls.userTo.errors.required\\\">* Obrigatório</small>\\r\\n              </ion-text>\\r\\n            </ion-label>\\r\\n            <ion-select id=\\\"userTo\\\" name=\\\"userTo\\\" formControlName=\\\"userTo\\\" placeholder=\\\"Selecione\\\"\\r\\n              interface=\\\"action-sheet\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Cancela\\\">\\r\\n              <span *ngFor=\\\"let user of usersList\\\">\\r\\n\\r\\n                <!-- 18.1) Correção na variável -->\\r\\n                <ion-select-option *ngIf=\\\"user.id !== userData.uid\\\" value=\\\"{{ user.uid}} \\\">{{ user.name }}</ion-select-option>\\r\\n              </span>\\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n\\r\\n          <ion-item>\\r\\n            <ion-label for=\\\"subject\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n              Assunto:\\r\\n              <ion-text color=\\\"danger\\\" *ngIf=\\\"sendForm.controls.subject.errors\\\">\\r\\n                <small *ngIf=\\\"sendForm.controls.subject.errors.required\\\">* Obrigatório</small>\\r\\n                <small *ngIf=\\\"sendForm.controls.subject.errors.minlength\\\">* Inválido</small>\\r\\n              </ion-text>\\r\\n            </ion-label>\\r\\n            <ion-input type=\\\"text\\\" id=\\\"subject\\\" name=\\\"subject\\\" formControlName=\\\"subject\\\"\\r\\n              placeholder=\\\"Assunto da mensagem\\\"></ion-input>\\r\\n          </ion-item>\\r\\n\\r\\n          <ion-item>\\r\\n            <ion-label for=\\\"message\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n              Mensagem:\\r\\n              <ion-text color=\\\"danger\\\" *ngIf=\\\"sendForm.controls.message.errors\\\">\\r\\n                <small *ngIf=\\\"sendForm.controls.message.errors.required\\\">* Obrigatório</small>\\r\\n                <small *ngIf=\\\"sendForm.controls.message.errors.minlength\\\">* Inválido</small>\\r\\n              </ion-text>\\r\\n            </ion-label>\\r\\n            <ion-textarea rows=\\\"1\\\" type=\\\"text\\\" id=\\\"message\\\" name=\\\"message\\\" formControlName=\\\"message\\\"\\r\\n              placeholder=\\\"Texto da mensagem\\\" autoGrow=\\\"true\\\"></ion-textarea>\\r\\n          </ion-item>\\r\\n\\r\\n        </ion-list>\\r\\n\\r\\n        <ion-button type=\\\"submit\\\" expand=\\\"block\\\" class=\\\"ion-margin-vertical\\\" [disabled]=\\\"sendForm.invalid\\\">\\r\\n          Enviar\\r\\n        </ion-button>\\r\\n\\r\\n      </form>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<!-- 17.1) Menu de mensagens -->\\r\\n<app-msg-menu></app-msg-menu>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21zZy9zZW5kL3NlbmQucGFnZS5zY3NzIn0= */\";","/**\r\n * Serviços de uso geral\r\n *    Aqui estão alguns serviços usados em toda ou parte do aplicativo\r\n * @author Por Luferat\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n// 3.1) Importa dependências\r\nimport { Router } from '@angular/router'; // Roteamento\r\nimport { AlertController } from '@ionic/angular'; // Caixa de alerta\r\n\r\n// 4.1) Importa dependências\r\nimport { StorageMap } from '@ngx-pwa/local-storage'; // Armazenamento local\r\n\r\n// 13.1) Importa dependências\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppService {\r\n\r\n  constructor(\r\n\r\n    // 3.2) Injeção das dependências\r\n    public router: Router, // Roteamento\r\n    public alertController: AlertController, // Caixa de alerta\r\n\r\n    // 4.2) Injeção das dependências\r\n    private storage: StorageMap, // Armazenamento local\r\n\r\n    // 13.2) Injeção das dependências\r\n    public fbStore: AngularFirestore,\r\n  ) { }\r\n\r\n  // 3.3) Caixa de alerta para feedback (https://ionicframework.com/docs/api/alert)\r\n  async myAlert(title: string, text: string) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: text,\r\n      buttons: [{\r\n        text: 'Ok',\r\n        handler: () => true\r\n      }]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  // 4.3) Método que detecta a presença do perfil local\r\n  async isProfile() {\r\n\r\n    // Constrói a promise\r\n    return new Promise<any>((resolve, reject) => {\r\n\r\n      // Lê o armazenamento local\r\n      this.storage.get('userProfile', { type: 'string' }).subscribe({\r\n        next: (data) => {\r\n\r\n          // Se perfil, retorna 'true'\r\n          if (data) { resolve(true); }\r\n\r\n          // Se não tem perfil, retorna 'false'\r\n          else { resolve(false); }\r\n        },\r\n\r\n        // Em caso de erro ao tentar acessar 'storage'\r\n        error: (error) => console.error(error)\r\n      });\r\n    });\r\n  }\r\n\r\n  // 13.3) Apaga uma mensagem da caixa de mensagens\r\n  async msgDelete(userId: string, msgBox: string, msgId: string) {\r\n\r\n    // 14.1) Exibe a caixa de alerta e de confirmação\r\n    const alert = await this.alertController.create({\r\n      cssClass: '',\r\n      header: 'Apagar mensagem',\r\n      message: 'Tem certeza que deseja apagar esta mensagem? Este processo é irreversível!',\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => false\r\n        }, {\r\n          text: 'Apagar',\r\n          handler: () => {\r\n\r\n            // Localize a caixa correta e apaga a mensagem\r\n            this.fbStore.collection(`messages/${userId}/${msgBox}`).doc(msgId).update({ status: 'Apagada' })\r\n\r\n              // Se a mensagem foi apagada, retorna para a listagem da caixa\r\n              .then(() => { this.router.navigate([`/msg/${msgBox}`]); })\r\n\r\n              // Se deu erro, exibe\r\n              .catch(error => { console.log(error); });\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n// 10.1) Importa dependências\r\nimport { Router } from '@angular/router';\r\nimport { StorageMap } from '@ngx-pwa/local-storage';\r\nimport { AppService } from 'src/app/services/app.service';\r\n\r\n// 17.1) Importa dependências\r\nimport { FormGroup, FormBuilder, Validators, AbstractControl, ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { EventsService } from 'src/app/services/events.service';\r\n\r\n// 18.1) Importa dependências\r\nimport { DatePipe } from '@angular/common';\r\nimport { AlertController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-send',\r\n  templateUrl: './send.page.html',\r\n  styleUrls: ['./send.page.scss'],\r\n})\r\nexport class SendPage implements OnInit {\r\n\r\n  // 10.3) Armazena dados do usuário\r\n  userData: any;\r\n  userProfile: any;\r\n\r\n  // 17.3) Atributos\r\n  usersList: any; // Lista de destinatários\r\n  sendForm: any; // Formulário\r\n\r\n  // 18.3) Atributos\r\n  msgSend: any; // Mensagem a ser enviada\r\n  pipe = new DatePipe('en_US'); // Use your own locale\r\n\r\n  constructor(\r\n\r\n    // 10.2) Injeta dependências\r\n    public router: Router,\r\n    public app: AppService,\r\n    public storage: StorageMap,\r\n\r\n    // 17.2) Injeta dependências\r\n    private formBuilder: FormBuilder,\r\n    public fbStore: AngularFirestore,\r\n    public events: EventsService,\r\n\r\n    // 18.2) Injeta dependências\r\n    public alertController: AlertController\r\n  ) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  // 10.4) Se tem perfil, obtém dados.\r\n  //       Se não tem, vai para \"novo perfil\"\r\n  ionViewWillEnter() {\r\n\r\n    // Testa o perfil local (true e false)\r\n    this.app.isProfile().then(\r\n      (data) => {\r\n\r\n        // Se existe, faz as ações da página\r\n        if (data) {\r\n\r\n          // Obtém dados do login local e armazena em 'userData'\r\n          this.storage.get('userData', { type: 'string' }).subscribe(\r\n            (uData) => {\r\n              this.userData = JSON.parse(uData);\r\n\r\n              // Obtém dados do perfil local e armazena em 'userProfile'\r\n              this.storage.get('userProfile', { type: 'string' }).subscribe(\r\n                (pData) => {\r\n                  this.userProfile = JSON.parse(pData);\r\n\r\n                  // 17.4) Obtém lista de destinatários.\r\n                  //  É necessário criar um índice no Cloud Firestore, para isso, acesse o link no console de erro.\r\n                  this.fbStore.collection(\r\n                    'users',\r\n                    ref => ref.where('status', '==', 'ativo').orderBy('name')\r\n                  ).valueChanges({ idField: 'uid' }).subscribe(\r\n                    (usData) => {\r\n                      this.usersList = usData;\r\n\r\n                      // 17.5) Cria formulário\r\n                      this.sendFormCreate();\r\n                    }\r\n                  );\r\n                }\r\n              );\r\n            }\r\n          );\r\n\r\n          // Se não existe perfil, vai para o cadastro de perfil\r\n        } else {\r\n          this.router.navigate(['/user/new']);\r\n        }\r\n      });\r\n  }\r\n\r\n  // 17.6) Cria formulário ReactiveFormsModule\r\n  async sendFormCreate() {\r\n\r\n    this.sendForm = this.formBuilder.group({\r\n      userTo: [\r\n        null,\r\n        Validators.compose([Validators.required])\r\n      ],\r\n      subject: [\r\n        null,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(3)\r\n        ])\r\n      ],\r\n      message: [\r\n        null,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(5)\r\n        ])\r\n      ]\r\n    });\r\n  }\r\n\r\n  // 17.7) Processa envio da mensagem\r\n  sendSubmit() {\r\n\r\n    // 18.4) Formata mensagem para database\r\n    this.msgSend = {\r\n      from: this.userData.uid.trim(),\r\n      to: this.sendForm.value.userTo.trim(),\r\n      date: this.pipe.transform(Date.now(), 'yyyy-MM-dd hh:mm:ss').trim(),\r\n      subject: this.sendForm.value.subject.trim(),\r\n      message: this.sendForm.value.message.trim(),\r\n      status: 'Não lida'\r\n    };\r\n\r\n    // 18.5) Salva mensagem na caixa de entrada do destinatário\r\n    this.fbStore.collection(`messages/${this.msgSend.to}/inbox`).add(this.msgSend)\r\n      .then((docRef) => {\r\n\r\n        // 18.6) Altera status da mensagem\r\n        this.msgSend.status = 'Enviada';\r\n\r\n        // 18.7) Salva mensagem na caixa de saída do remetente\r\n        this.fbStore.collection(`messages/${this.msgSend.from}/outbox`).doc(docRef.id).set(this.msgSend)\r\n          .then(() => {\r\n\r\n            // 18.8) Feedback\r\n            this.presentAlertConfirm();\r\n          });\r\n      });\r\n  }\r\n\r\n  // 18.9) Feedback\r\n  async presentAlertConfirm() {\r\n    const alert = await this.alertController.create({\r\n      header: 'Mensagem enviada',\r\n      message: 'Sua mensagem foi enviada com sucesso!<br><br>Clique em [Ok] para voltar à caixa de entrada.',\r\n      buttons: [\r\n        {\r\n          text: 'Ok',\r\n          handler: () => { this.router.navigate(['/msg/inbox']); }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SendPage } from './send.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SendPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SendPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { SendPageRoutingModule } from './send-routing.module';\r\nimport { SendPage } from './send.page';\r\n\r\n// 17.1) Importa dependências\r\nimport { MsgMenuComponent } from 'src/app/components/msg-menu/msg-menu.component';\r\n\r\n// 17.3) Importa dependências\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    SendPageRoutingModule,\r\n\r\n    // 17.4) Injeta dependências\r\n    ReactiveFormsModule,\r\n  ],\r\n  declarations: [\r\n    SendPage,\r\n\r\n    // 17.2) Declara dependências\r\n    MsgMenuComponent,\r\n  ]\r\n})\r\nexport class SendPageModule { }\r\n"]}