{"version":3,"sources":["webpack:///src/app/user/login/login.page.html","webpack:///src/app/user/login/login.module.ts","webpack:///src/app/services/app.service.ts","webpack:///src/app/user/login/login-routing.module.ts","webpack:///src/app/user/login/login.page.ts","webpack:///src/app/user/login/login.page.scss"],"names":["LoginPageModule","imports","declarations","AppService","router","alertController","storage","fbStore","title","text","create","header","message","buttons","handler","alert","present","Promise","resolve","reject","get","type","subscribe","next","data","error","console","userId","msgBox","msgId","cssClass","role","collection","doc","update","status","then","navigate","log","providedIn","routes","path","component","LoginPageRoutingModule","forChild","exports","LoginPage","fbAuth","app","events","provider","authProvider","GoogleAuthProvider","signInWithPopup","userData","uid","user","displayName","email","photoURL","set","JSON","stringify","publish","firestore","uData","exists","userProfile","id","myAlert","selector","template"],"mappings":"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","file":"user-login-login-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n    <ion-title>Login / Entrar</ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <div class=\\\"ion-padding\\\">\\r\\n\\r\\n    <h2>Olá!</h2>\\r\\n\\r\\n    <p>Para que você possa acessar os serviços deste aplicativo, é necessário estar logado(a)...</p>\\r\\n    <p>Escolha um método de entrada clicando no botão.</p>\\r\\n\\r\\n    <div class=\\\"login-table\\\">\\r\\n\\r\\n      <p>Entrar com:</p>&nbsp;\\r\\n\\r\\n      <!-- 3.1) Botões de login com redes sociais -->\\r\\n\\r\\n      <ion-button expand=\\\"block\\\" (click)=\\\"login('google')\\\">\\r\\n        <ion-icon name=\\\"logo-google\\\" slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>Google</ion-label>\\r\\n      </ion-button>\\r\\n\\r\\n      <!-- 16.1) Bloqueando botões ainda sem uso -->\\r\\n      <ion-button class=\\\"ion-margin-top\\\" expand=\\\"block\\\" (click)=\\\"login('facebook')\\\" disabled=\\\"true\\\">\\r\\n        <ion-icon name=\\\"logo-facebook\\\" slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>Facebook</ion-label>\\r\\n      </ion-button>\\r\\n\\r\\n      <ion-button class=\\\"ion-margin-top\\\" expand=\\\"block\\\" (click)=\\\"login('twitter')\\\" disabled=\\\"true\\\">\\r\\n        <ion-icon name=\\\"logo-twitter\\\" slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>Twitter</ion-label>\\r\\n      </ion-button>\\r\\n\\r\\n      <ion-button class=\\\"ion-margin-top\\\" expand=\\\"block\\\" (click)=\\\"login('github')\\\" disabled=\\\"true\\\">\\r\\n        <ion-icon name=\\\"logo-github\\\" slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>GitHub</ion-label>\\r\\n      </ion-button>\\r\\n\\r\\n      <!-- ... -->\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPageRoutingModule } from './login-routing.module';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    LoginPageRoutingModule\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","/**\r\n * Serviços de uso geral\r\n *    Aqui estão alguns serviços usados em toda ou parte do aplicativo\r\n * @author Por Luferat\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n// 3.1) Importa dependências\r\nimport { Router } from '@angular/router'; // Roteamento\r\nimport { AlertController } from '@ionic/angular'; // Caixa de alerta\r\n\r\n// 4.1) Importa dependências\r\nimport { StorageMap } from '@ngx-pwa/local-storage'; // Armazenamento local\r\n\r\n// 13.1) Importa dependências\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppService {\r\n\r\n  constructor(\r\n\r\n    // 3.2) Injeção das dependências\r\n    public router: Router, // Roteamento\r\n    public alertController: AlertController, // Caixa de alerta\r\n\r\n    // 4.2) Injeção das dependências\r\n    private storage: StorageMap, // Armazenamento local\r\n\r\n    // 13.2) Injeção das dependências\r\n    public fbStore: AngularFirestore,\r\n  ) { }\r\n\r\n  // 3.3) Caixa de alerta para feedback (https://ionicframework.com/docs/api/alert)\r\n  async myAlert(title: string, text: string) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: text,\r\n      buttons: [{\r\n        text: 'Ok',\r\n        handler: () => true\r\n      }]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  // 4.3) Método que detecta a presença do perfil local\r\n  async isProfile() {\r\n\r\n    // Constrói a promise\r\n    return new Promise<any>((resolve, reject) => {\r\n\r\n      // Lê o armazenamento local\r\n      this.storage.get('userProfile', { type: 'string' }).subscribe({\r\n        next: (data) => {\r\n\r\n          // Se perfil, retorna 'true'\r\n          if (data) { resolve(true); }\r\n\r\n          // Se não tem perfil, retorna 'false'\r\n          else { resolve(false); }\r\n        },\r\n\r\n        // Em caso de erro ao tentar acessar 'storage'\r\n        error: (error) => console.error(error)\r\n      });\r\n    });\r\n  }\r\n\r\n  // 13.3) Apaga uma mensagem da caixa de mensagens\r\n  async msgDelete(userId: string, msgBox: string, msgId: string) {\r\n\r\n    // 14.1) Exibe a caixa de alerta e de confirmação\r\n    const alert = await this.alertController.create({\r\n      cssClass: '',\r\n      header: 'Apagar mensagem',\r\n      message: 'Tem certeza que deseja apagar esta mensagem? Este processo é irreversível!',\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => false\r\n        }, {\r\n          text: 'Apagar',\r\n          handler: () => {\r\n\r\n            // Localize a caixa correta e apaga a mensagem\r\n            this.fbStore.collection(`messages/${userId}/${msgBox}`).doc(msgId).update({ status: 'Apagada' })\r\n\r\n              // Se a mensagem foi apagada, retorna para a listagem da caixa\r\n              .then(() => { this.router.navigate([`/msg/${msgBox}`]); })\r\n\r\n              // Se deu erro, exibe\r\n              .catch(error => { console.log(error); });\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginPageRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n// 3.1) Importa dependências\r\nimport { AngularFireAuth } from '@angular/fire/auth'; // Autenticação\r\nimport { auth } from 'firebase/app'; // Firebase CLI\r\nimport { StorageMap } from '@ngx-pwa/local-storage'; // Armazenamento local\r\nimport { AngularFirestore } from '@angular/fire/firestore'; // Firestore\r\nimport { Router } from '@angular/router'; // Roteamento\r\nimport { AppService } from '../../services/app.service'; // Serviços de uso geral\r\nimport { EventsService } from '../../services/events.service'; // Dispara eventos globais\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n\r\n  // 3.2) Variáveis locais\r\n  authProvider: any; // Provedor de login social\r\n  userData: any; // Dados do login do usuário\r\n  userProfile: any; // Dados do perfil do usuário\r\n\r\n  constructor(\r\n\r\n    // 3.3) Injeção de dependências\r\n    public fbAuth: AngularFireAuth, // Autenticação\r\n    public fbStore: AngularFirestore, // Firestore\r\n    private storage: StorageMap, // Armazenamento local\r\n    public app: AppService, // Serviços de uso geral\r\n    public router: Router, // Roteamento\r\n    public events: EventsService, // Dispara eventos globais\r\n  ) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  // 3.4) Ação do botão de login\r\n  async login(provider: string) {\r\n\r\n    // Seleção do provedor de login social\r\n    // - Adicione outros provedores conforme a configuração do Firebase Authentication\r\n    switch (provider) {\r\n\r\n      case 'google':\r\n        this.authProvider = new auth.GoogleAuthProvider();\r\n        break;\r\n\r\n      case 'facebook':\r\n        alert('Você precisa implementar isso no Firebase Authentication!');\r\n        return false;\r\n        // this.authProvider = new auth.FacebookAuthProvider();\r\n        break;\r\n\r\n      case 'twitter':\r\n        alert('Você precisa implementar isso no Firebase Authentication!');\r\n        return false;\r\n        // this.authProvider = new auth.TwitterAuthProvider();\r\n        break;\r\n\r\n      case 'github':\r\n        alert('Você precisa implementar isso no Firebase Authentication!');\r\n        return false;\r\n        // this.authProvider = new auth.GithubAuthProvider();\r\n        break;\r\n\r\n      // case ....\r\n\r\n    }\r\n\r\n    // Login com popup no Firebase Auth\r\n    this.fbAuth.signInWithPopup(this.authProvider)\r\n\r\n      // Se logou\r\n      .then((data) => {\r\n\r\n        // Formata dados do usuário\r\n        this.userData = {\r\n          uid: data.user.uid,\r\n          displayName: data.user.displayName,\r\n          email: data.user.email,\r\n          photoURL: data.user.photoURL,\r\n\r\n          // 8.1) Provedor de login usado\r\n          provider\r\n        };\r\n\r\n        // Salva no armazenamento local\r\n        this.storage.set('userData', JSON.stringify(this.userData)).subscribe({\r\n          next: () => {\r\n\r\n            // 3.6) Atualiza 'userData' no menu principal também (app.component.ts)\r\n            this.events.publish('userData', this.userData);\r\n\r\n            // Verifica se tem perfil no Firestore\r\n            this.fbStore.firestore.collection('users').doc(this.userData.uid).get()\r\n              .then((uData) => {\r\n\r\n                // Se tem perfil\r\n                if (uData.exists) {\r\n\r\n                  // Obtém dados do perfil\r\n                  this.userProfile = uData.data();\r\n                  this.userProfile.uid = uData.id;\r\n\r\n                  // Grava perfil no armazenamento local\r\n                  this.storage.set('userProfile', JSON.stringify(this.userProfile)).subscribe({\r\n                    next: () => {\r\n\r\n                      // 10.1) Atualiza 'userProfile' no menu principal (app.component.ts)\r\n                      this.events.publish('userProfile', this.userData);\r\n\r\n                      // Exibe alerta\r\n                      this.app.myAlert(\r\n                        `Olá ${this.userData.displayName}`,\r\n                        `Você já pode acessar todos os recursos do aplicativo.`\r\n                      );\r\n\r\n                      // Vai para a raiz\r\n                      this.router.navigate(['/']);\r\n                    },\r\n                    error: (error) => { console.error(error); }\r\n                  });\r\n\r\n                  // Se não tem perfil\r\n                } else {\r\n\r\n                  // 4.1) COMENTE --> Exibe alerta e vai para a rota '/user/new'\r\n                  // this.app.myAlert(\r\n                  //   `Olá ${this.userData.displayName}`,\r\n                  //   `Você precisa completar seu cadastro para usar todos os recursos do aplicativo.`\r\n                  // );\r\n\r\n                  // Vai para o cadatro de novo perfil\r\n                  this.router.navigate(['/user/new']);\r\n                }\r\n              })\r\n              .catch((error) => { console.error(error); });\r\n          },\r\n          error: (error) => { console.error(error); }\r\n        });\r\n      })\r\n      .catch((error) => { console.log(error); });\r\n  }\r\n}\r\n","export default \"@charset \\\"UTF-8\\\";\\n/* 3.1) Formata lista de botões */\\n.login-table {\\n  display: table;\\n  margin: auto;\\n  width: 220px;\\n}\\n.login-table ion-label {\\n  padding-left: 0.5rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCO0FBQWhCLGlDQUFBO0FBQ0E7RUFDSSxjQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7QUFFSjtBQUNBO0VBQ0ksb0JBQUE7QUFFSiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgXCJVVEYtOFwiO1xuLyogMy4xKSBGb3JtYXRhIGxpc3RhIGRlIGJvdMO1ZXMgKi9cbi5sb2dpbi10YWJsZSB7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBtYXJnaW46IGF1dG87XG4gIHdpZHRoOiAyMjBweDtcbn1cblxuLmxvZ2luLXRhYmxlIGlvbi1sYWJlbCB7XG4gIHBhZGRpbmctbGVmdDogMC41cmVtO1xufSJdfQ== */\";"]}