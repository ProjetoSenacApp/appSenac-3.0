{"version":3,"sources":["webpack:///src/app/user/profile/profile.module.ts","webpack:///src/app/user/profile/profile.page.ts","webpack:///src/app/services/app.service.ts","webpack:///src/app/user/profile/profile.page.html","webpack:///src/app/user/profile/profile.page.scss","webpack:///src/app/user/profile/profile-routing.module.ts"],"names":["ProfilePageModule","imports","declarations","ProfilePage","router","app","storage","isProfile","then","data","get","type","subscribe","userData","JSON","parse","userProfile","navigate","profileURL","provider","myAlert","displayName","window","open","selector","template","AppService","alertController","fbStore","title","text","create","header","message","buttons","handler","alert","present","Promise","resolve","reject","next","error","console","userId","msgBox","msgId","cssClass","role","collection","doc","update","status","log","providedIn","routes","path","component","ProfilePageRoutingModule","forChild","exports"],"mappings":"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","file":"user-profile-profile-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ProfilePageRoutingModule } from './profile-routing.module';\r\n\r\nimport { ProfilePage } from './profile.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ProfilePageRoutingModule\r\n  ],\r\n  declarations: [ProfilePage]\r\n})\r\nexport class ProfilePageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n// 4.1) Importa dependências\r\nimport { Router } from '@angular/router';\r\nimport { AppService } from 'src/app/services/app.service';\r\n\r\n// 8.1) Importa dependências\r\nimport { StorageMap } from '@ngx-pwa/local-storage';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.page.html',\r\n  styleUrls: ['./profile.page.scss'],\r\n})\r\nexport class ProfilePage implements OnInit {\r\n\r\n  // 8.2) Variáveis para dados do usuário\r\n  userData: any;\r\n  userProfile: any;\r\n\r\n  constructor(\r\n\r\n    // 4.2) Injeta dependências\r\n    public router: Router,\r\n    public app: AppService,\r\n\r\n    // 8.3) Injeta dependências\r\n    public storage: StorageMap,\r\n  ) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  // 4.3) 'ionViewWillEnter' é executado SEMPRE que a página (re)carrega\r\n  //      https://ionicframework.com/blog/navigating-lifecycle-events/\r\n  ionViewWillEnter() {\r\n\r\n    // Testa o perfil local\r\n    this.app.isProfile().then(\r\n      (data) => {\r\n\r\n        // Se existe, faz as ações da página\r\n        if (data) {\r\n\r\n          // 8.4) Obtém dados do login local e armazena em 'userData'\r\n          this.storage.get('userData', { type: 'string' }).subscribe(\r\n            (data) => {\r\n              this.userData = JSON.parse(data);\r\n\r\n              // 8.5) Obtém dados do perfil local e armazena em 'userProfile'\r\n              this.storage.get('userProfile', { type: 'string' }).subscribe(\r\n                (data) => {\r\n                  this.userProfile = JSON.parse(data);\r\n                }\r\n              );\r\n            }\r\n          );\r\n\r\n          // Se não existe perfil, vai para o cadastro de perfil\r\n        } else {\r\n          this.router.navigate(['/user/new']);\r\n        }\r\n      });\r\n  }\r\n\r\n  // 8.6) Ação do botão para editar perfil do provedor de login\r\n  editProviderProfile() {\r\n\r\n    // Variável com URL do perfil, de acordo com o provedor\r\n    var profileURL = '';\r\n\r\n    // Seleciona o URL, de acordo com o provedor\r\n    switch (this.userData.provider) {\r\n\r\n      case 'google':\r\n        profileURL = 'https://myaccount.google.com/profile';\r\n        break;\r\n\r\n      case 'facebook':\r\n        // profileURL = '';\r\n        break;\r\n\r\n      case 'twitter':\r\n        // profileURL = '';\r\n        break;\r\n\r\n      case 'github':\r\n        // profileURL = '';\r\n        break;\r\n\r\n      // case ....\r\n    }\r\n\r\n    // Aviso de redirecionamento\r\n    if (this.app.myAlert(this.userData.displayName, `Atenção! Você será redirecionado para a página de perfil no provedor`)) {\r\n\r\n      // Redireciona para o perfil do usuário no provedor\r\n      window.open(profileURL);\r\n    }\r\n  }\r\n}","/**\r\n * Serviços de uso geral\r\n *    Aqui estão alguns serviços usados em toda ou parte do aplicativo\r\n * @author Por Luferat\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n// 3.1) Importa dependências\r\nimport { Router } from '@angular/router'; // Roteamento\r\nimport { AlertController } from '@ionic/angular'; // Caixa de alerta\r\n\r\n// 4.1) Importa dependências\r\nimport { StorageMap } from '@ngx-pwa/local-storage'; // Armazenamento local\r\n\r\n// 13.1) Importa dependências\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppService {\r\n\r\n  constructor(\r\n\r\n    // 3.2) Injeção das dependências\r\n    public router: Router, // Roteamento\r\n    public alertController: AlertController, // Caixa de alerta\r\n\r\n    // 4.2) Injeção das dependências\r\n    private storage: StorageMap, // Armazenamento local\r\n\r\n    // 13.2) Injeção das dependências\r\n    public fbStore: AngularFirestore,\r\n  ) { }\r\n\r\n  // 3.3) Caixa de alerta para feedback (https://ionicframework.com/docs/api/alert)\r\n  async myAlert(title: string, text: string) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: text,\r\n      buttons: [{\r\n        text: 'Ok',\r\n        handler: () => true\r\n      }]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  // 4.3) Método que detecta a presença do perfil local\r\n  async isProfile() {\r\n\r\n    // Constrói a promise\r\n    return new Promise<any>((resolve, reject) => {\r\n\r\n      // Lê o armazenamento local\r\n      this.storage.get('userProfile', { type: 'string' }).subscribe({\r\n        next: (data) => {\r\n\r\n          // Se perfil, retorna 'true'\r\n          if (data) { resolve(true); }\r\n\r\n          // Se não tem perfil, retorna 'false'\r\n          else { resolve(false); }\r\n        },\r\n\r\n        // Em caso de erro ao tentar acessar 'storage'\r\n        error: (error) => console.error(error)\r\n      });\r\n    });\r\n  }\r\n\r\n  // 13.3) Apaga uma mensagem da caixa de mensagens\r\n  async msgDelete(userId: string, msgBox: string, msgId: string) {\r\n\r\n    // 14.1) Exibe a caixa de alerta e de confirmação\r\n    const alert = await this.alertController.create({\r\n      cssClass: '',\r\n      header: 'Apagar mensagem',\r\n      message: 'Tem certeza que deseja apagar esta mensagem? Este processo é irreversível!',\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => false\r\n        }, {\r\n          text: 'Apagar',\r\n          handler: () => {\r\n\r\n            // Localize a caixa correta e apaga a mensagem\r\n            this.fbStore.collection(`messages/${userId}/${msgBox}`).doc(msgId).update({ status: 'Apagada' })\r\n\r\n              // Se a mensagem foi apagada, retorna para a listagem da caixa\r\n              .then(() => { this.router.navigate([`/msg/${msgBox}`]); })\r\n\r\n              // Se deu erro, exibe\r\n              .catch(error => { console.log(error); });\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n}\r\n","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n    <ion-title>Seu Perfil</ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <div class=\\\"ion-padding\\\" *ngIf=\\\"userData && userProfile\\\">\\r\\n\\r\\n    <ion-card>\\r\\n\\r\\n      <ion-card-header>\\r\\n        <ion-card-title>Perfil do Login</ion-card-title>\\r\\n      </ion-card-header>\\r\\n      <img [src]=\\\"[userData.photoURL]\\\" [alt]=\\\"[userData.displayName]\\\">\\r\\n      <ion-card-content>\\r\\n        <h3 style=\\\"font-size: 1.2rem; font-weight: bold;\\\">{{ userData.displayName }}</h3>\\r\\n        <ion-grid>\\r\\n          <ion-row>\\r\\n            <ion-col>{{ userData.email }}</ion-col>\\r\\n            <ion-col class=\\\"ion-text-end\\\">\\r\\n\\r\\n              <!-- 8.1) Editar perfil da rede social -->\\r\\n              <ion-button size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"editProviderProfile()\\\">\\r\\n                <ion-icon name=\\\"create\\\"></ion-icon>\\r\\n              </ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-card-content>\\r\\n\\r\\n      <hr>\\r\\n      <ion-card-header>\\r\\n        <ion-card-title>Dados Pessoais</ion-card-title>\\r\\n      </ion-card-header>\\r\\n      <ion-card-content>\\r\\n        <ul>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">Nome:</ion-text>{{ userProfile.name }}\\r\\n          </li>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">CPF:</ion-text>{{ userProfile.cpf }}\\r\\n          </li>\\r\\n\\r\\n          <!-- 16.1) Data de nascimento formatada -->\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">Nascimento:</ion-text>{{ userProfile.birth | date: 'dd/MM/yyyy' }}\\r\\n          </li>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">Gênero:</ion-text>{{ userProfile.gender }}\\r\\n          </li>\\r\\n        </ul>\\r\\n      </ion-card-content>\\r\\n\\r\\n      <hr>\\r\\n      <ion-card-header>\\r\\n        <ion-card-title>Dados de Contato</ion-card-title>\\r\\n      </ion-card-header>\\r\\n      <ion-card-content>\\r\\n        <ul>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">E-mail:</ion-text>\\r\\n            {{ userProfile.email }}\\r\\n          </li>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">Telefone Residêncial:</ion-text>\\r\\n            {{ userProfile.homePhone }}\\r\\n          </li>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">Telefone Celular:</ion-text>\\r\\n            {{ userProfile.cellPhone }}\\r\\n          </li>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">WhatsApp</ion-text>\\r\\n            {{ userProfile.whatsApp }}\\r\\n          </li>\\r\\n        </ul>\\r\\n      </ion-card-content>\\r\\n\\r\\n      <hr>\\r\\n      <ion-card-header>\\r\\n        <ion-card-title>Outras Informações</ion-card-title>\\r\\n      </ion-card-header>\\r\\n      <ion-card-content>\\r\\n        <ul>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">Seleção 1:</ion-text>\\r\\n            {{ userProfile.selectStatic }}\\r\\n          </li>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">Seleção 2:</ion-text>\\r\\n            {{ userProfile.selectDynamic }}\\r\\n          </li>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">Nível de Acesso:</ion-text>\\r\\n            {{ userProfile.type }}\\r\\n          </li>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">Status</ion-text>\\r\\n            {{ userProfile.status }}\\r\\n          </li>\\r\\n        </ul>\\r\\n      </ion-card-content>\\r\\n\\r\\n    </ion-card>\\r\\n\\r\\n    <!-- 9.1) Botão para editar perfil -->\\r\\n    <ion-button expand=\\\"block\\\" class=\\\"ion-no-margin ion-margin-vertical\\\" routerLink=\\\"/user/edit\\\">\\r\\n      <ion-icon name=\\\"create\\\"></ion-icon>&nbsp;\\r\\n      Editar Perfil\\r\\n    </ion-button>\\r\\n\\r\\n    <!-- 16.1) Botão para excluir perfil -->\\r\\n    <ion-button expand=\\\"block\\\" color=\\\"danger\\\" class=\\\"ion-no-margin ion-margin-vertical\\\" routerLink=\\\"/user/delete\\\">\\r\\n      <ion-icon name=\\\"alert-circle\\\"></ion-icon>&nbsp;\\r\\n      Apagar Conta\\r\\n    </ion-button>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</ion-content>\";","export default \"ion-card {\\n  margin: 1rem 0 auto 0;\\n}\\n\\nion-card img {\\n  margin: auto;\\n  display: block;\\n  width: 100%;\\n  max-width: 320px;\\n}\\n\\nion-card ion-grid,\\nion-card ion-row,\\nion-card ion-col {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\nion-card-content ul {\\n  padding: 0;\\n  list-style: none;\\n}\\n\\nion-card-content ul li {\\n  margin-bottom: 0.5rem;\\n}\\n\\nion-card-content ul li ion-text {\\n  font-weight: bold;\\n  display: block;\\n  font-size: small;\\n}\\n\\nion-card hr {\\n  border-bottom: 1px dotted grey;\\n  margin: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci9wcm9maWxlL3Byb2ZpbGUucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kscUJBQUE7QUFDSjs7QUFFQTtFQUNJLFlBQUE7RUFDQSxjQUFBO0VBQ0EsV0FBQTtFQUNBLGdCQUFBO0FBQ0o7O0FBRUE7OztFQUdJLFNBQUE7RUFDQSxVQUFBO0FBQ0o7O0FBRUE7RUFDSSxVQUFBO0VBQ0EsZ0JBQUE7QUFDSjs7QUFFQTtFQUNJLHFCQUFBO0FBQ0o7O0FBRUE7RUFDSSxpQkFBQTtFQUNBLGNBQUE7RUFDQSxnQkFBQTtBQUNKOztBQUVBO0VBQ0ksOEJBQUE7RUFDQSxTQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC91c2VyL3Byb2ZpbGUvcHJvZmlsZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY2FyZCB7XHJcbiAgICBtYXJnaW46IDFyZW0gMCBhdXRvIDA7XHJcbn1cclxuXHJcbmlvbi1jYXJkIGltZyB7XHJcbiAgICBtYXJnaW4gICA6IGF1dG87XHJcbiAgICBkaXNwbGF5ICA6IGJsb2NrO1xyXG4gICAgd2lkdGggICAgOiAxMDAlO1xyXG4gICAgbWF4LXdpZHRoOiAzMjBweDtcclxufVxyXG5cclxuaW9uLWNhcmQgaW9uLWdyaWQsXHJcbmlvbi1jYXJkIGlvbi1yb3csXHJcbmlvbi1jYXJkIGlvbi1jb2wge1xyXG4gICAgbWFyZ2luIDogMDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcbmlvbi1jYXJkLWNvbnRlbnQgdWwge1xyXG4gICAgcGFkZGluZyAgIDogMDtcclxuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbn1cclxuXHJcbmlvbi1jYXJkLWNvbnRlbnQgdWwgbGkge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogLjVyZW07XHJcbn1cclxuXHJcbmlvbi1jYXJkLWNvbnRlbnQgdWwgbGkgaW9uLXRleHQge1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBkaXNwbGF5ICAgIDogYmxvY2s7XHJcbiAgICBmb250LXNpemUgIDogc21hbGw7XHJcbn1cclxuXHJcbmlvbi1jYXJkIGhyIHtcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQgZ3JleTtcclxuICAgIG1hcmdpbjogMDtcclxufSJdfQ== */\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ProfilePage } from './profile.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProfilePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ProfilePageRoutingModule {}\r\n"]}