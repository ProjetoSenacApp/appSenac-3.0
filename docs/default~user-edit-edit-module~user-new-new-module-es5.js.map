{"version":3,"sources":["webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/services/app.service.ts","webpack:///src/app/components/profile/profile.component.scss","webpack:///src/app/components/profile/profile.component.html"],"names":["ProfileComponent","formBuilder","storage","router","fbStore","app","events","paragraph","btnText","redirectPage","get","type","subscribe","data","navigate","userData","JSON","parse","profileFormCreate","collection","ref","orderBy","valueChanges","uData","selectDynamic","userProfile","profileForm","controls","setValue","group","id","uid","name","compose","required","minLength","birth","over14Years","cpf","pattern","gender","email","homePhone","cellPhone","whatsApp","selectStatic","status","invalid","doc","set","value","then","docRef","stringify","publish","myAlert","displayName","reset","error","console","control","split","year","month","day","today","Date","dateBirth","timeToTest","getTime","under14years","selector","template","AppService","alertController","title","text","create","header","message","buttons","handler","alert","present","Promise","resolve","reject","next","userId","msgBox","msgId","cssClass","role","update","log","providedIn"],"mappings":"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","file":"default~user-edit-edit-module~user-new-new-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n \r\n// 5.1) Importa dependências\r\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\r\n\r\n// 5.8) Importa dependências\r\nimport { StorageMap } from '@ngx-pwa/local-storage';\r\nimport { Router } from '@angular/router';\r\n\r\n// 6.2) Importa dependências\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\n\r\n// 7.1) Importa dependências\r\nimport { AppService } from '../../services/app.service'; // Serviços de uso geral\r\n\r\n// 10.1) Importa dependências\r\nimport { EventsService } from 'src/app/services/events.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss'],\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  // 5.2) Cria formulário\r\n  public profileForm: FormGroup;\r\n\r\n  // 5.9) Variável com dados do usuário logado\r\n  userData: any;\r\n\r\n  // 6.3) Variável com a lista \"select01\"\r\n  // 9.1) Variável com a lista \"select01\" (Ajuste no  nome da variável)\r\n  selectDynamic: any;\r\n\r\n  // 9.2) Variável com perfil do usuário\r\n  userProfile: any;\r\n\r\n  // 9.3) Textos da View\r\n  paragraph = `Você precisa cadastrar seu perfil para ter acesso aos recursos do aplicativo de forma pesonalizada.`;\r\n  btnText = `Cadastrar perfil`;\r\n  redirectPage = `/`;\r\n\r\n  constructor(\r\n\r\n    // 5.3) Injeta dependências\r\n    private formBuilder: FormBuilder,\r\n\r\n    // 5.10) Injeta dependências\r\n    public storage: StorageMap,\r\n    public router: Router,\r\n\r\n    // 6.4) Injeta dependências\r\n    public fbStore: AngularFirestore,\r\n\r\n    // 7.2) Injeta dependências\r\n    public app: AppService,\r\n\r\n    // 10.2) Injeta dependências\r\n    public events: EventsService,\r\n  ) {\r\n\r\n    // 5.11) Obtém dados do usuário logado\r\n    this.storage.get('userData', { type: 'string' }).subscribe((data) => {\r\n\r\n      // 5.12) Se não logou, vai para a raiz\r\n      if (!data) { this.router.navigate(['/']); }\r\n\r\n      // 5.13) Dados do usuário logado\r\n      this.userData = JSON.parse(data);\r\n\r\n      // 5.4) Cria formulário\r\n      this.profileFormCreate();\r\n\r\n      // 6.5) Obtém lista \"select01\" do Firestore de forma assíncrona\r\n      // 9.4) Obtém lista \"select01\" do Firestore de forma assíncrona (Ajuste no  nome da variável)\r\n      this.fbStore.collection('select01', ref => ref.orderBy('option')).valueChanges().subscribe(\r\n        (uData) => {\r\n          this.selectDynamic = uData;\r\n\r\n          // 9.5) Preenche o campo automaticamente com dados do perfil se estiver editando\r\n          if (this.selectDynamic && this.userProfile) {\r\n            this.profileForm.controls.selectDynamic.setValue(this.userProfile.selectDynamic);\r\n          }\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  // 5.6) Define campos do formulário e validações\r\n  async profileFormCreate() {\r\n\r\n    this.profileForm = this.formBuilder.group({\r\n\r\n      id: [\r\n\r\n        // 5.14) Preenche o uid do perfil em 'id'\r\n        this.userData.uid\r\n      ],\r\n\r\n      name: [\r\n\r\n        // 9.6) Valor inicial do campo\r\n        null,\r\n\r\n        // 5.15) Preenche o nome do perfil em 'name'\r\n        // this.userData.displayName,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(3)\r\n        ])\r\n      ],\r\n      birth: [\r\n        null,\r\n        Validators.compose([\r\n          Validators.required,\r\n          this.over14Years\r\n        ])\r\n      ],\r\n      cpf: [\r\n        null,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.pattern(/^\\b\\d{11}\\b/g)\r\n        ])\r\n      ],\r\n\r\n      // 6.7) Cria campo tipo 'radio'\r\n      gender: [\r\n        null,\r\n\r\n        // 6.8) Validando campo\r\n        Validators.compose([\r\n          Validators.required\r\n        ])\r\n      ],\r\n\r\n      email: [\r\n\r\n        // 5.16) Preenche o email do perfil em 'email'\r\n        // 9.7) Valor inicial do campo\r\n        null,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.email\r\n        ])\r\n      ],\r\n      homePhone: [\r\n        null,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.pattern(/^\\(?[1-9]{2}\\)? ?(?:[2-8]|8[1-9])[0-9]{3}\\-?[0-9]{4}$/)\r\n        ])\r\n      ],\r\n      cellPhone: [\r\n        null,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.pattern(/^\\(?[1-9]{2}\\)? ?(?:[2-8]|9[1-9])[0-9]{3}\\-?[0-9]{4}$/)\r\n        ])\r\n      ],\r\n      whatsApp: [\r\n        null,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.pattern(/^\\(?[1-9]{2}\\)? ?(?:[2-8]|9[1-9])[0-9]{3}\\-?[0-9]{4}$/)\r\n        ])\r\n      ],\r\n\r\n      // 6.1) Cria campo tipo 'select'\r\n      selectStatic: [\r\n        null,\r\n\r\n        // 6.9) Validando campo\r\n        Validators.compose([\r\n          Validators.required\r\n        ])\r\n      ],\r\n\r\n      // 6.6) Cria campo tipo 'select'\r\n      selectDynamic: [\r\n        null,\r\n\r\n        // 6.10) Validando campo\r\n        Validators.compose([\r\n          Validators.required\r\n        ])\r\n      ],\r\n\r\n      type: ['usuário'],\r\n      status: ['ativo']\r\n\r\n    });\r\n  }\r\n\r\n  // 5.6) Método que trata envio do formulário\r\n  profileSubmit() {\r\n    // console.log(this.profileForm.value);\r\n\r\n    // 7.3) Se formulário é inválido, sai sem fazer nada\r\n    if (this.profileForm.invalid) { return false; }\r\n\r\n    // 7.4) Salva no Firestore\r\n    this.fbStore.collection('users').doc(this.userData.uid).set(this.profileForm.value)\r\n      .then((docRef) => {\r\n\r\n        // 7.5) Salva no armazenamento local\r\n        this.storage.set('userProfile', JSON.stringify(this.profileForm.value)).subscribe(\r\n          () => {\r\n\r\n            // 10.3) Atualiza 'user*' no menu principal (app.component.ts)\r\n            this.events.publish('userData', this.userData);\r\n            this.events.publish('userProfile', this.userData);\r\n\r\n            // 7.6) Feedback 'sucesso'\r\n            this.app.myAlert(this.userData.displayName, `Seu perfil foi cadastrado com sucesso!`);\r\n\r\n            // 7.7) Limpa o formulário\r\n            this.profileForm.reset();\r\n\r\n            // 7.8) Vai para a raiz\r\n            this.router.navigate([this.redirectPage]);\r\n          }\r\n        );\r\n      })\r\n      .catch(\r\n\r\n        // 7.9) Tratamento de erros\r\n        (error) => {\r\n          console.error(error);\r\n          this.app.myAlert(this.userData.displayName, `Ocorreu um erro ao cadastrar seu perfil. Por favor, tente mais tarde.`);\r\n        }\r\n      );\r\n  }\r\n\r\n  // 5.7) Método que valida data de nascimento\r\n  over14Years(control: AbstractControl) {\r\n    const birth = control.value;\r\n    if (birth) {\r\n      const [year, month, day] = birth.split('-');\r\n      const today = new Date();\r\n      const dateBirth = new Date(year, month, day, 0, 0, 0);\r\n      const timeToTest = 1000 * 60 * 60 * 24 * 365 * 14; // 14 anos em milissegundos...\r\n      if (today.getTime() - dateBirth.getTime() >= timeToTest) { return null; }\r\n    }\r\n    return { under14years: true };\r\n  }\r\n\r\n  // 9.8) Preenche campos do form, mas só quando a View estiver pronta\r\n  ngAfterViewInit() {\r\n\r\n    // Obtém dados do perfil do armazenamento local\r\n    this.storage.get('userProfile', { type: 'string' }).subscribe(\r\n      (data) => {\r\n\r\n        // Se existem dados, é porque vai editar perfil\r\n        if (data) {\r\n\r\n          // Obtém dados\r\n          this.userProfile = JSON.parse(data);\r\n\r\n          // Atualiza campos do form com dados do perfil\r\n          this.profileForm.controls.name.setValue(this.userProfile.name);\r\n          this.profileForm.controls.birth.setValue(this.userProfile.birth);\r\n          this.profileForm.controls.cpf.setValue(this.userProfile.cpf);\r\n          this.profileForm.controls.gender.setValue(this.userProfile.gender);\r\n          this.profileForm.controls.email.setValue(this.userProfile.email);\r\n          this.profileForm.controls.homePhone.setValue(this.userProfile.homePhone);\r\n          this.profileForm.controls.cellPhone.setValue(this.userProfile.cellPhone);\r\n          this.profileForm.controls.whatsApp.setValue(this.userProfile.whatsApp);\r\n          this.profileForm.controls.selectStatic.setValue(this.userProfile.selectStatic);\r\n          this.profileForm.controls.type.setValue(this.userProfile.type);\r\n          this.profileForm.controls.status.setValue(this.userProfile.status);\r\n\r\n          // OBS: Campos dinâmicos devem ser pré-preenchidos na carga de seus valores (veja 9.4)\r\n\r\n          // Atualiza a View\r\n          this.paragraph = `Altere os campos abaixo com atenção, para editar seu perfil.`;\r\n          this.btnText = `Salvar perfil`;\r\n          this.redirectPage = `/user/profile`;\r\n\r\n          // Se não existem dado de perfil, é um novo perfil\r\n        } else {\r\n\r\n          // Preenche campos com valor do login\r\n          this.profileForm.controls.name.setValue(this.userData.displayName);\r\n          this.profileForm.controls.email.setValue(this.userData.email);\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","/**\r\n * Serviços de uso geral\r\n *    Aqui estão alguns serviços usados em toda ou parte do aplicativo\r\n * @author Por Luferat\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n// 3.1) Importa dependências\r\nimport { Router } from '@angular/router'; // Roteamento\r\nimport { AlertController } from '@ionic/angular'; // Caixa de alerta\r\n\r\n// 4.1) Importa dependências\r\nimport { StorageMap } from '@ngx-pwa/local-storage'; // Armazenamento local\r\n\r\n// 13.1) Importa dependências\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppService {\r\n\r\n  constructor(\r\n\r\n    // 3.2) Injeção das dependências\r\n    public router: Router, // Roteamento\r\n    public alertController: AlertController, // Caixa de alerta\r\n\r\n    // 4.2) Injeção das dependências\r\n    private storage: StorageMap, // Armazenamento local\r\n\r\n    // 13.2) Injeção das dependências\r\n    public fbStore: AngularFirestore,\r\n  ) { }\r\n\r\n  // 3.3) Caixa de alerta para feedback (https://ionicframework.com/docs/api/alert)\r\n  async myAlert(title: string, text: string) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: text,\r\n      buttons: [{\r\n        text: 'Ok',\r\n        handler: () => true\r\n      }]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  // 4.3) Método que detecta a presença do perfil local\r\n  async isProfile() {\r\n\r\n    // Constrói a promise\r\n    return new Promise<any>((resolve, reject) => {\r\n\r\n      // Lê o armazenamento local\r\n      this.storage.get('userProfile', { type: 'string' }).subscribe({\r\n        next: (data) => {\r\n\r\n          // Se perfil, retorna 'true'\r\n          if (data) { resolve(true); }\r\n\r\n          // Se não tem perfil, retorna 'false'\r\n          else { resolve(false); }\r\n        },\r\n\r\n        // Em caso de erro ao tentar acessar 'storage'\r\n        error: (error) => console.error(error)\r\n      });\r\n    });\r\n  }\r\n\r\n  // 13.3) Apaga uma mensagem da caixa de mensagens\r\n  async msgDelete(userId: string, msgBox: string, msgId: string) {\r\n\r\n    // 14.1) Exibe a caixa de alerta e de confirmação\r\n    const alert = await this.alertController.create({\r\n      cssClass: '',\r\n      header: 'Apagar mensagem',\r\n      message: 'Tem certeza que deseja apagar esta mensagem? Este processo é irreversível!',\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => false\r\n        }, {\r\n          text: 'Apagar',\r\n          handler: () => {\r\n\r\n            // Localize a caixa correta e apaga a mensagem\r\n            this.fbStore.collection(`messages/${userId}/${msgBox}`).doc(msgId).update({ status: 'Apagada' })\r\n\r\n              // Se a mensagem foi apagada, retorna para a listagem da caixa\r\n              .then(() => { this.router.navigate([`/msg/${msgBox}`]); })\r\n\r\n              // Se deu erro, exibe\r\n              .catch(error => { console.log(error); });\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n}\r\n","export default \"#profileList div {\\n  padding: 1rem;\\n  font-weight: bold;\\n  background: #575717;\\n}\\n\\n#profileList hr {\\n  border: none;\\n  padding: 0.5rem;\\n  margin: 0;\\n  background: inherit;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsaUJBQUE7RUFDQSxtQkFBQTtBQUNKOztBQUVBO0VBQ0ksWUFBQTtFQUNBLGVBQUE7RUFDQSxTQUFBO0VBQ0EsbUJBQUE7QUFDSiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI3Byb2ZpbGVMaXN0IGRpdiB7XHJcbiAgICBwYWRkaW5nICAgIDogMXJlbTtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgYmFja2dyb3VuZCA6IHJnYig4NywgODcsIDIzKTtcclxufVxyXG5cclxuI3Byb2ZpbGVMaXN0IGhyIHtcclxuICAgIGJvcmRlciAgICAgICA6IG5vbmU7XHJcbiAgICBwYWRkaW5nICAgICAgOiAuNXJlbTtcclxuICAgIG1hcmdpbiAgICAgICA6IDA7XHJcbiAgICBiYWNrZ3JvdW5kICAgOiBpbmhlcml0O1xyXG59Il19 */\";","export default \"<!-- 5.1) Só exibe form se estiver logado -->\\r\\n<div *ngIf=\\\"userData\\\">\\r\\n\\r\\n  <!-- 5.2) Cumprimenta usuário logado -->\\r\\n  <h2>Olá {{ userData.displayName }}!</h2>\\r\\n\\r\\n  <p>{{ paragraph }}</p>\\r\\n  <p class=\\\"ion-text-center\\\"><small>\\r\\n      <ion-text color=\\\"danger\\\">Preencha todos os campos.</ion-text>\\r\\n    </small></p>\\r\\n\\r\\n  <form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"profileSubmit()\\\">\\r\\n    <ion-input type=\\\"hidden\\\" id=\\\"id\\\" name=\\\"id\\\" formControlName=\\\"id\\\"></ion-input>\\r\\n\\r\\n    <ion-list lines=\\\"full\\\" id=\\\"profileList\\\" class=\\\"ion-no-padding\\\">\\r\\n\\r\\n      <div>Dados pessoais:</div>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"name\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          Nome completo:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"profileForm.controls.name.errors\\\">\\r\\n            <small *ngIf=\\\"profileForm.controls.name.errors.required\\\">* Obrigatório</small>\\r\\n            <small *ngIf=\\\"profileForm.controls.name.errors.minlength\\\">* Inválido</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-input type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" formControlName=\\\"name\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"birth\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          Nascimento:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"profileForm.controls.birth.errors\\\">\\r\\n            <small *ngIf=\\\"profileForm.controls.birth.errors.under14years\\\">* Deve ter 14 anos ou mais</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-input type=\\\"date\\\" id=\\\"birth\\\" name=\\\"birth\\\" formControlName=\\\"birth\\\" placeholder=\\\"Exemplo: 27/11/1998\\\">\\r\\n        </ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"cpf\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          CPF:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"profileForm.controls.cpf.errors\\\">\\r\\n            <small *ngIf=\\\"profileForm.controls.cpf.errors.required\\\">* Obrigatório</small>\\r\\n            <small *ngIf=\\\"profileForm.controls.cpf.errors.pattern\\\">* Inválido</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-input type=\\\"text\\\" id=\\\"cpf\\\" name=\\\"cpf\\\" formControlName=\\\"cpf\\\" placeholder=\\\"Somente números\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <!-- 6.4) Campo do tipo \\\"radio\\\"-->\\r\\n      <ion-list>\\r\\n        <ion-radio-group formControlName=\\\"gender\\\" id=\\\"gender\\\" name=\\\"gender\\\">\\r\\n          <ion-list-header>\\r\\n            <ion-label color=\\\"primary\\\" for=\\\"gender\\\">\\r\\n              Gênero:\\r\\n\\r\\n              <!-- 6.5) Alerta de campo inválido -->\\r\\n              <ion-text color=\\\"danger\\\" *ngIf=\\\"profileForm.controls.gender.errors\\\">\\r\\n                <small *ngIf=\\\"profileForm.controls.gender.errors.required\\\">* Obrigatório</small>\\r\\n              </ion-text>\\r\\n            </ion-label>\\r\\n          </ion-list-header>\\r\\n\\r\\n          <ion-item>\\r\\n            <ion-label>Não informar</ion-label>\\r\\n            <ion-radio slot=\\\"start\\\" value=\\\"Não informar\\\"></ion-radio>\\r\\n          </ion-item>\\r\\n\\r\\n          <ion-item>\\r\\n            <ion-label>Feminino</ion-label>\\r\\n            <ion-radio slot=\\\"start\\\" value=\\\"Feminino\\\"></ion-radio>\\r\\n          </ion-item>\\r\\n\\r\\n          <ion-item>\\r\\n            <ion-label>Masculino</ion-label>\\r\\n            <ion-radio slot=\\\"start\\\" value=\\\"Masculino\\\"></ion-radio>\\r\\n          </ion-item>\\r\\n        </ion-radio-group>\\r\\n      </ion-list>\\r\\n\\r\\n      <hr>\\r\\n      <div>Contatos:</div>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"email\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          E-mail:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"profileForm.controls.email.errors\\\">\\r\\n            <small *ngIf=\\\"profileForm.controls.email.errors.required\\\">* Obrigatório</small>\\r\\n            <small *ngIf=\\\"profileForm.controls.email.errors.email\\\">* Inválido</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-input type=\\\"text\\\" id=\\\"email\\\" name=\\\"email\\\" formControlName=\\\"email\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"homePhone\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          Tel. residencial:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"profileForm.controls.homePhone.errors\\\">\\r\\n            <small *ngIf=\\\"profileForm.controls.homePhone.errors.required\\\">* Obrigatório</small>\\r\\n            <small *ngIf=\\\"profileForm.controls.homePhone.errors.pattern\\\">* Inválido</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-input type=\\\"text\\\" id=\\\"homePhone\\\" name=\\\"homePhone\\\" formControlName=\\\"homePhone\\\"\\r\\n          placeholder=\\\"Exemplo: (21) 2345-6789\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"cellPhone\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          Tel. celular:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"profileForm.controls.cellPhone.errors\\\">\\r\\n            <small *ngIf=\\\"profileForm.controls.cellPhone.errors.required\\\">* Obrigatório</small>\\r\\n            <small *ngIf=\\\"profileForm.controls.cellPhone.errors.pattern\\\">* Inválido</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-input type=\\\"text\\\" id=\\\"cellPhone\\\" name=\\\"cellPhone\\\" formControlName=\\\"cellPhone\\\"\\r\\n          placeholder=\\\"Exemplo: (21) 98765-4321\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"whatsApp\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          WhatsApp:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"profileForm.controls.whatsApp.errors\\\">\\r\\n            <small *ngIf=\\\"profileForm.controls.whatsApp.errors.required\\\">* Obrigatório</small>\\r\\n            <small *ngIf=\\\"profileForm.controls.whatsApp.errors.pattern\\\">* Inválido</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-input type=\\\"text\\\" id=\\\"whatsApp\\\" name=\\\"whatsApp\\\" formControlName=\\\"whatsApp\\\"\\r\\n          placeholder=\\\"Exemplo: (21) 98765-4321\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <hr>\\r\\n      <div>Opções:</div>\\r\\n\\r\\n      <!-- 6.1) Lista de opções 'estática' -->\\r\\n      <!-- 10.1) Usando <ion-select interface=\\\"popover\\\"... -->\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"selectStatic\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          Seleção 1:\\r\\n\\r\\n          <!-- 6.6) Alerta de campo inválido -->\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"profileForm.controls.selectStatic.errors\\\">\\r\\n            <small *ngIf=\\\"profileForm.controls.selectStatic.errors.required\\\">* Obrigatório</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-select interface=\\\"popover\\\" formControlName=\\\"selectStatic\\\" placeholder=\\\"Selecione\\\" id=\\\"selectStatic\\\"\\r\\n          name=\\\"selectStatic\\\">\\r\\n          <ion-select-option value=\\\"Opção 1\\\">Opção 1</ion-select-option>\\r\\n          <ion-select-option value=\\\"Opção 2\\\">Opção 2</ion-select-option>\\r\\n          <ion-select-option value=\\\"Opção 3\\\">Opção 3</ion-select-option>\\r\\n        </ion-select>\\r\\n      </ion-item>\\r\\n\\r\\n      <!-- 6.2) Lista de opções 'dinâmica', obtida do Firestore -->\\r\\n      <!-- 9.1) Lista de opções 'dinâmica', obtida do Firestore (Ajuste no  nome da variável) -->\\r\\n      <!-- 10.2) Usando <ion-select interface=\\\"popover\\\"... -->\\r\\n      <ion-item *ngIf=\\\"selectDynamic\\\">\\r\\n        <ion-label for=\\\"selectDynamic\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          Seleção 2:\\r\\n\\r\\n          <!-- 6.7) Alerta de campo inválido -->\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"profileForm.controls.selectDynamic.errors\\\">\\r\\n            <small *ngIf=\\\"profileForm.controls.selectDynamic.errors.required\\\">* Obrigatório</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-select interface=\\\"popover\\\" formControlName=\\\"selectDynamic\\\" placeholder=\\\"Selecione\\\" id=\\\"selectDynamic\\\"\\r\\n          name=\\\"selectDynamic\\\">\\r\\n\\r\\n          <!-- 6.3) Lista as opções que \\\"vieram\\\" do Firestore -->\\r\\n          <ion-select-option *ngFor=\\\"let select of selectDynamic\\\" value=\\\"{{ select.option }}\\\">\\r\\n            {{ select.option }}\\r\\n          </ion-select-option>\\r\\n\\r\\n        </ion-select>\\r\\n      </ion-item>\\r\\n\\r\\n    </ion-list>\\r\\n\\r\\n    <ion-button type=\\\"submit\\\" expand=\\\"block\\\" class=\\\"ion-margin-vertical\\\" [disabled]=\\\"profileForm.invalid\\\">{{ btnText }}\\r\\n    </ion-button>\\r\\n\\r\\n    <!-- <div>{{ profileForm.value | json}}</div> -->\\r\\n    <!-- <div>{{ profileForm.valid | json }}</div> -->\\r\\n\\r\\n  </form>\\r\\n\\r\\n</div>\";"]}