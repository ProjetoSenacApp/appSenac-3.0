{"version":3,"sources":["./src/app/msg/inbox/inbox.module.ts","./src/app/msg/inbox/inbox.page.scss","./src/app/msg/inbox/inbox-routing.module.ts","./src/app/msg/inbox/inbox.page.ts","./src/app/msg/inbox/inbox.page.html","./src/app/services/app.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AAEA;AAEmB;AAEvB;AAEzC,6BAA6B;AACmD;IAgBnE,eAAe,SAAf,eAAe;CAAG;AAAlB,eAAe;IAd3B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,4EAAsB;SACvB;QACD,YAAY,EAAE;YACZ,qDAAS;YAET,6BAA6B;YAC7B,wFAAgB;SACjB;KACF,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;;AC3B5B;AAAe,mHAAoD,qBAAqB,GAAG,+BAA+B,uBAAuB,qBAAqB,gBAAgB,oBAAoB,GAAG,+FAA+F,qBAAqB,GAAG,kBAAkB,mBAAmB,uBAAuB,GAAG,WAAW,mBAAmB,GAAG,eAAe,0BAA0B,sBAAsB,GAAG,6CAA6C,utCAAutC,E;;;;;;;;;;;;;;;;;;;ACAjsD;AACc;AAEd;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;IAMW,sBAAsB,SAAtB,sBAAsB;CAAG;AAAzB,sBAAsB;IAJlC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;AChBe;AAElD,6BAA6B;AACY;AACW;AACM;AAE1D,gCAAgC;AAC2B;IAO9C,SAAS,SAAT,SAAS;IASpB;IAEE,4BAA4B;IACrB,MAAc,EACd,GAAe,EACf,OAAmB;IAE1B,4BAA4B;IACrB,OAAyB;QALzB,WAAM,GAAN,MAAM,CAAQ;QACd,QAAG,GAAH,GAAG,CAAY;QACf,YAAO,GAAP,OAAO,CAAY;QAGnB,YAAO,GAAP,OAAO,CAAkB;IAE9B,CAAC;IAEL,QAAQ,KAAK,CAAC;IAEd,oCAAoC;IACpC,2CAA2C;IAC3C,gBAAgB;QAEd,sCAAsC;QACtC,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,IAAI,CACvB,CAAC,IAAI,EAAE,EAAE;YAEP,oCAAoC;YACpC,IAAI,IAAI,EAAE;gBAER,sDAAsD;gBACtD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,SAAS,CACxD,CAAC,KAAK,EAAE,EAAE;oBACR,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBAElC,0DAA0D;oBAC1D,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,SAAS,CAC3D,CAAC,KAAK,EAAE,EAAE;wBACR,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBAErC,+CAA+C;wBAC/C,IAAI,CAAC,cAAc,EAAE,CAAC;oBACxB,CAAC,CACF,CAAC;gBACJ,CAAC,CACF,CAAC;gBAEF,sDAAsD;aACvD;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aACrC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+CAA+C;IAC/C,cAAc;QAEZ,kEAAkE;QAClE,IAAI,CAAC,OAAO,CAAC,UAAU,CACrB,YAAY,IAAI,CAAC,QAAQ,CAAC,GAAG,QAAQ,EACrC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,CACnC,CAAC,YAAY,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,SAAS,CAC5C,CAAC,KAAK,EAAE,EAAE;YAER,mCAAmC;YACnC,MAAM,WAAW,GAAG,EAAE,CAAC;YAEvB,+BAA+B;YAC/B,KAAK,CAAC,OAAO,CACX,CAAC,OAAY,EAAE,EAAE;gBAEf,qCAAqC;gBACrC,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS,EAAE;oBAEhC,wCAAwC;oBACxC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAM,SAAS,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,YAAY,EAAE,CAAC,SAAS,CACrE,CAAC,IAAI,EAAE,EAAE;wBACP,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;wBAE7B,kDAAkD;wBAClD,QAAQ,OAAO,CAAC,MAAM,EAAE;4BACtB,KAAK,UAAU;gCACb,OAAO,CAAC,UAAU,GAAG,cAAc,CAAC;gCACpC,MAAM;4BACR,KAAK,MAAM;gCACT,OAAO,CAAC,UAAU,GAAG,mBAAmB,CAAC;gCACzC,MAAM;4BACR,KAAK,YAAY;gCACf,OAAO,CAAC,UAAU,GAAG,cAAc,CAAC;gCACpC,MAAM;yBACT;wBAED,yCAAyC;wBACzC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC5B,CAAC,CACF,CAAC;iBACH;YACH,CAAC,CACF,CAAC;YAEF,8BAA8B;YAC9B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QACjC,CAAC,CAAC,CAAC;IACP,CAAC;CACF;;YAxHQ,sDAAM;YAEN,uEAAU;YADV,iEAAU;YAIV,wEAAgB;;AAOZ,SAAS;IALrB,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,6EAAgC;;KAEjC,CAAC;GACW,SAAS,CA4GrB;AA5GqB;;;;;;;;;;;;;ACftB;AAAe,otBAAqpB,cAAc,gBAAgB,qCAAqC,oCAAoC,gBAAgB,8GAA8G,aAAa,KAAK,eAAe,4CAA4C,gBAAgB,mEAAmE,0CAA0C,gCAAgC,OAAO,GAAG,cAAc,qWAAqW,E;;;;;;;;;;;;ACAh/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;GAIG;;AAEwC;AAE3C,4BAA4B;AACa,CAAC,aAAa;AACN,CAAC,kBAAkB;AAEpE,4BAA4B;AACwB,CAAC,sBAAsB;AAE3E,6BAA6B;AAC8B;IAK9C,UAAU,SAAV,UAAU;IAErB;IAEE,gCAAgC;IACzB,MAAc,EAAE,aAAa;IAC7B,eAAgC,EAAE,kBAAkB;IAE3D,gCAAgC;IACxB,OAAmB,EAAE,sBAAsB;IAEnD,iCAAiC;IAC1B,OAAyB;QAPzB,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;QAG/B,YAAO,GAAP,OAAO,CAAY;QAGpB,YAAO,GAAP,OAAO,CAAkB;IAC9B,CAAC;IAEL,iFAAiF;IAC3E,OAAO,CAAC,KAAa,EAAE,IAAY;;YACvC,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,MAAM,EAAE,KAAK;gBACb,OAAO,EAAE,IAAI;gBACb,OAAO,EAAE,CAAC;wBACR,IAAI,EAAE,IAAI;wBACV,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI;qBACpB,CAAC;aACH,CAAC,CAAC;YACH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC;KAAA;IAED,qDAAqD;IAC/C,SAAS;;YAEb,qBAAqB;YACrB,OAAO,IAAI,OAAO,CAAM,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBAE1C,2BAA2B;gBAC3B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,SAAS,CAAC;oBAC5D,IAAI,EAAE,CAAC,IAAI,EAAE,EAAE;wBAEb,4BAA4B;wBAC5B,IAAI,IAAI,EAAE;4BAAE,OAAO,CAAC,IAAI,CAAC,CAAC;yBAAE;wBAE5B,qCAAqC;6BAChC;4BAAE,OAAO,CAAC,KAAK,CAAC,CAAC;yBAAE;oBAC1B,CAAC;oBAED,8CAA8C;oBAC9C,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC;iBACvC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC;KAAA;IAED,iDAAiD;IAC3C,SAAS,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;;YAE3D,iDAAiD;YACjD,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,QAAQ,EAAE,EAAE;gBACZ,MAAM,EAAE,iBAAiB;gBACzB,OAAO,EAAE,4EAA4E;gBACrF,OAAO,EAAE;oBACP;wBACE,IAAI,EAAE,UAAU;wBAChB,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE,WAAW;wBACrB,OAAO,EAAE,GAAG,EAAE,CAAC,KAAK;qBACrB,EAAE;wBACD,IAAI,EAAE,QAAQ;wBACd,OAAO,EAAE,GAAG,EAAE;4BAEZ,8CAA8C;4BAC9C,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,MAAM,IAAI,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC;gCAE9F,8DAA8D;iCAC7D,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gCAE1D,qBAAqB;iCACpB,KAAK,CAAC,KAAK,CAAC,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC7C,CAAC;qBACF;iBACF;aACF,CAAC,CAAC;YACH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC;KAAA;CACF;;YA/FQ,sDAAM;YACN,8DAAe;YAGf,iEAAU;YAGV,wEAAgB;;AAKZ,UAAU;IAHtB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,UAAU,CAmFtB;AAnFsB","file":"msg-inbox-inbox-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { InboxPageRoutingModule } from './inbox-routing.module';\r\n\r\nimport { InboxPage } from './inbox.page';\r\n\r\n// 17.1) Importa dependências\r\nimport { MsgMenuComponent } from '../../components/msg-menu/msg-menu.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    InboxPageRoutingModule\r\n  ],\r\n  declarations: [\r\n    InboxPage,\r\n\r\n    // 17.2) Declara dependências\r\n    MsgMenuComponent,\r\n  ]\r\n})\r\nexport class InboxPageModule {}\r\n","export default \"/* 14.1) Formata o grid das mesagens */\\nion-grid {\\n  margin-top: 1rem;\\n}\\nion-row ion-col:first-child {\\n  text-align: center;\\n  background: #eee;\\n  color: #333;\\n  padding: 0.2rem;\\n}\\n/* 18.1) Estiliza mensagens lidas de forma diferente */\\nion-row ion-col.readed:first-child {\\n  background: #888;\\n}\\nion-grid small {\\n  display: block;\\n  margin-top: 0.2rem;\\n}\\nion-row {\\n  margin: 1rem 0;\\n}\\nion-col div {\\n  margin-bottom: 0.5rem;\\n  font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbXNnL2luYm94L2luYm94LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxzQ0FBQTtBQUNBO0VBQ0ksZ0JBQUE7QUFDSjtBQUVBO0VBQ0ksa0JBQUE7RUFDQSxnQkFBQTtFQUNBLFdBQUE7RUFDQSxlQUFBO0FBQ0o7QUFFQSxzREFBQTtBQUNBO0VBQ0ksZ0JBQUE7QUFDSjtBQUVBO0VBQ0ksY0FBQTtFQUNBLGtCQUFBO0FBQ0o7QUFFQTtFQUNJLGNBQUE7QUFDSjtBQUVBO0VBQ0kscUJBQUE7RUFDQSxpQkFBQTtBQUNKIiwiZmlsZSI6InNyYy9hcHAvbXNnL2luYm94L2luYm94LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIDE0LjEpIEZvcm1hdGEgbyBncmlkIGRhcyBtZXNhZ2VucyAqL1xyXG5pb24tZ3JpZCB7XHJcbiAgICBtYXJnaW4tdG9wOiAxcmVtO1xyXG59XHJcblxyXG5pb24tcm93IGlvbi1jb2w6Zmlyc3QtY2hpbGQge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgYmFja2dyb3VuZDogI2VlZTtcclxuICAgIGNvbG9yICAgICA6ICMzMzM7XHJcbiAgICBwYWRkaW5nICAgOiAuMlxccmVtO1xyXG59XHJcblxyXG4vKiAxOC4xKSBFc3RpbGl6YSBtZW5zYWdlbnMgbGlkYXMgZGUgZm9ybWEgZGlmZXJlbnRlICovXHJcbmlvbi1yb3cgaW9uLWNvbC5yZWFkZWQ6Zmlyc3QtY2hpbGQge1xyXG4gICAgYmFja2dyb3VuZDogIzg4ODtcclxufVxyXG5cclxuaW9uLWdyaWQgc21hbGwge1xyXG4gICAgZGlzcGxheSAgIDogYmxvY2s7XHJcbiAgICBtYXJnaW4tdG9wOiAuMnJlbTtcclxufVxyXG5cclxuaW9uLXJvdyB7XHJcbiAgICBtYXJnaW46IDFyZW0gMDtcclxufVxyXG5cclxuaW9uLWNvbCBkaXYge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogLjVyZW07XHJcbiAgICBmb250LXdlaWdodCAgOiBib2xkO1xyXG59Il19 */\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { InboxPage } from './inbox.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: InboxPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class InboxPageRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n// 10.1) Importa dependências\r\nimport { Router } from '@angular/router';\r\nimport { StorageMap } from '@ngx-pwa/local-storage';\r\nimport { AppService } from 'src/app/services/app.service';\r\n\r\n// 11.1) Importa as dependências\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\n\r\n@Component({\r\n  selector: 'app-inbox',\r\n  templateUrl: './inbox.page.html',\r\n  styleUrls: ['./inbox.page.scss'],\r\n})\r\nexport class InboxPage implements OnInit {\r\n\r\n  // 10.3) Armazena dados do usuário\r\n  userData: any;\r\n  userProfile: any;\r\n\r\n  // 11.3) Variável com todas as mensagens para a 'view'\r\n  public allMessages: any[any];\r\n\r\n  constructor(\r\n\r\n    // 10.2) Injeta dependências\r\n    public router: Router,\r\n    public app: AppService,\r\n    public storage: StorageMap,\r\n\r\n    // 11.2) Injeta dependências\r\n    public fbStore: AngularFirestore,\r\n\r\n  ) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  // 10.4) Se tem perfil, obtém dados.\r\n  //       Se não tem, vai para \"novo perfil\"\r\n  ionViewWillEnter() {\r\n\r\n    // Testa o perfil local (true e false)\r\n    this.app.isProfile().then(\r\n      (data) => {\r\n\r\n        // Se existe, faz as ações da página\r\n        if (data) {\r\n\r\n          // Obtém dados do login local e armazena em 'userData'\r\n          this.storage.get('userData', { type: 'string' }).subscribe(\r\n            (uData) => {\r\n              this.userData = JSON.parse(uData);\r\n\r\n              // Obtém dados do perfil local e armazena em 'userProfile'\r\n              this.storage.get('userProfile', { type: 'string' }).subscribe(\r\n                (pData) => {\r\n                  this.userProfile = JSON.parse(pData);\r\n\r\n                  // 11.4) Obtém todas as mensagens para a 'view'\r\n                  this.getAllMessages();\r\n                }\r\n              );\r\n            }\r\n          );\r\n\r\n          // Se não existe perfil, vai para o cadastro de perfil\r\n        } else {\r\n          this.router.navigate(['/user/new']);\r\n        }\r\n      });\r\n  }\r\n\r\n  // 11.5) Obtém todas as mensagens para a 'view'\r\n  getAllMessages() {\r\n\r\n    // Lê mesangens do banco de dados com base no Id do usuário logado\r\n    this.fbStore.collection(\r\n      `messages/${this.userData.uid}/inbox`,\r\n      ref => ref.orderBy('date', 'desc')\r\n    ).valueChanges({ idField: 'msgId' }).subscribe(\r\n      (mData) => {\r\n\r\n        // Variável local para as mensagens\r\n        const allMessages = [];\r\n\r\n        // Obtém cada mensagem recebida\r\n        mData.forEach(\r\n          (msgData: any) => {\r\n\r\n            // 13.1) Não exibe mensagens apagadas\r\n            if (msgData.status !== 'Apagada') {\r\n\r\n              // Obtém o nome de que enviou a mensagem\r\n              this.fbStore.doc<any>(`users/${msgData.from}`).valueChanges().subscribe(\r\n                (data) => {\r\n                  msgData.fromName = data.name;\r\n\r\n                  // 14) Seleciona ícone conforme status da mensagem\r\n                  switch (msgData.status) {\r\n                    case 'Não lida':\r\n                      msgData.statusIcon = 'mail-outline';\r\n                      break;\r\n                    case 'Lida':\r\n                      msgData.statusIcon = 'mail-open-outline';\r\n                      break;\r\n                    case 'Respondida':\r\n                      msgData.statusIcon = 'send-outline';\r\n                      break;\r\n                  }\r\n\r\n                  // Lista mensagem em \"todas as mensagens\"\r\n                  allMessages.push(msgData);\r\n                }\r\n              );\r\n            }\r\n          }\r\n        );\r\n\r\n        // Envia mensagens para a view\r\n        this.allMessages = allMessages;\r\n      });\r\n  }\r\n}\r\n","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n\\r\\n    <!-- 10.1) Menu e título -->\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n    <ion-title>Caixa de Entrada</ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <!-- 14.1) Lista mensagens recebidas -->\\r\\n  <div class=\\\"ion-padding\\\">\\r\\n\\r\\n    <p>Mensagens recebidas:</p>\\r\\n\\r\\n    <ion-grid class=\\\"allMessages\\\" *ngIf=\\\"allMessages?.length > 0\\\">\\r\\n\\r\\n      <ion-row *ngFor=\\\"let msg of allMessages\\\">\\r\\n\\r\\n        <!-- 18.2) Estiliza mensagens lidas de forma diferente -->\\r\\n        <ion-col size=\\\"1\\\" title=\\\"{{ msg.status }}\\\" [ngClass]=\\\"{'readed' : msg.status !== 'Não lida'}\\\">\\r\\n          <ion-icon name=\\\"{{msg.statusIcon}}\\\"></ion-icon>\\r\\n        </ion-col>\\r\\n        <ion-col>\\r\\n          <div><a routerLink=\\\"/msg/view/inbox/{{ msg.msgId }}\\\">{{ msg.subject }}</a></div>\\r\\n          <small>De <strong>{{ msg.fromName }}</strong></small>\\r\\n          <small>\\r\\n            Em <strong>{{ msg.date | date: ['dd/MM/yyyy, HH:mm'] }}.</strong>\\r\\n            &nbsp;|&nbsp; {{ msg.status }}\\r\\n          </small>\\r\\n        </ion-col>\\r\\n\\r\\n      </ion-row>\\r\\n\\r\\n    </ion-grid>\\r\\n\\r\\n    <!-- 18.1) Se não exitem mensagens à exibir -->\\r\\n    <p class=\\\"ion-text-center\\\" *ngIf=\\\"allMessages?.length == 0\\\">Nenhuma mensagem...</p>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<!-- 17.1) Menu de mensagens -->\\r\\n<app-msg-menu></app-msg-menu>\";","/**\r\n * Serviços de uso geral\r\n *    Aqui estão alguns serviços usados em toda ou parte do aplicativo\r\n * @author Por Luferat\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n// 3.1) Importa dependências\r\nimport { Router } from '@angular/router'; // Roteamento\r\nimport { AlertController } from '@ionic/angular'; // Caixa de alerta\r\n\r\n// 4.1) Importa dependências\r\nimport { StorageMap } from '@ngx-pwa/local-storage'; // Armazenamento local\r\n\r\n// 13.1) Importa dependências\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppService {\r\n\r\n  constructor(\r\n\r\n    // 3.2) Injeção das dependências\r\n    public router: Router, // Roteamento\r\n    public alertController: AlertController, // Caixa de alerta\r\n\r\n    // 4.2) Injeção das dependências\r\n    private storage: StorageMap, // Armazenamento local\r\n\r\n    // 13.2) Injeção das dependências\r\n    public fbStore: AngularFirestore,\r\n  ) { }\r\n\r\n  // 3.3) Caixa de alerta para feedback (https://ionicframework.com/docs/api/alert)\r\n  async myAlert(title: string, text: string) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: text,\r\n      buttons: [{\r\n        text: 'Ok',\r\n        handler: () => true\r\n      }]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  // 4.3) Método que detecta a presença do perfil local\r\n  async isProfile() {\r\n\r\n    // Constrói a promise\r\n    return new Promise<any>((resolve, reject) => {\r\n\r\n      // Lê o armazenamento local\r\n      this.storage.get('userProfile', { type: 'string' }).subscribe({\r\n        next: (data) => {\r\n\r\n          // Se perfil, retorna 'true'\r\n          if (data) { resolve(true); }\r\n\r\n          // Se não tem perfil, retorna 'false'\r\n          else { resolve(false); }\r\n        },\r\n\r\n        // Em caso de erro ao tentar acessar 'storage'\r\n        error: (error) => console.error(error)\r\n      });\r\n    });\r\n  }\r\n\r\n  // 13.3) Apaga uma mensagem da caixa de mensagens\r\n  async msgDelete(userId: string, msgBox: string, msgId: string) {\r\n\r\n    // 14.1) Exibe a caixa de alerta e de confirmação\r\n    const alert = await this.alertController.create({\r\n      cssClass: '',\r\n      header: 'Apagar mensagem',\r\n      message: 'Tem certeza que deseja apagar esta mensagem? Este processo é irreversível!',\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => false\r\n        }, {\r\n          text: 'Apagar',\r\n          handler: () => {\r\n\r\n            // Localize a caixa correta e apaga a mensagem\r\n            this.fbStore.collection(`messages/${userId}/${msgBox}`).doc(msgId).update({ status: 'Apagada' })\r\n\r\n              // Se a mensagem foi apagada, retorna para a listagem da caixa\r\n              .then(() => { this.router.navigate([`/msg/${msgBox}`]); })\r\n\r\n              // Se deu erro, exibe\r\n              .catch(error => { console.log(error); });\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}